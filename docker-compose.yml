version: "3.8"
services:

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: dreamteam25
      POSTGRES_DB: clearsky
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/initdb:/docker-entrypoint-initdb.d

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  grades-service:
    build:
      context: .
      dockerfile: ./grades-service/Dockerfile
    container_name: grades-service
    env_file:
      - ./grades-service/.env
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "5003:5003"

  stats-service:
    build:
      context: .
      dockerfile: ./stats-service/Dockerfile
    container_name: stats-service
    env_file:
      - ./stats-service/.env
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "5004:5004"

  user-service:
    build:
      context: .
      dockerfile: ./user-service/Dockerfile
    container_name: user-service
    env_file:
      - ./user-service/.env
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "5005:5005"

  review-service:
    build:
      context: .
      dockerfile: ./review-service/Dockerfile
    container_name: review-service
    env_file:
      - ./review-service/.env
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "5006:5006"

  api-gateway:
    build:
      context: .
      dockerfile: ./api-gateway/Dockerfile
    container_name: api-gateway
    depends_on:
      user-service:
        condition: service_started
      grades-service:
        condition: service_started
      stats-service:
        condition: service_started
      review-service:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    ports:
      - "8080:8080"

  frontend:
    build:
      context: ./frontend-app 
      dockerfile: Dockerfile
    container_name: frontend
    depends_on:
      - api-gateway
    ports:
      - "80:80"

volumes:
  pgdata:
